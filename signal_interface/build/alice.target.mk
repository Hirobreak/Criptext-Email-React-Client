# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := alice
DEFS_Debug := \
	'-DNODE_GYP_MODULE_NAME=alice' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DDEBUG' \
	'-D_DEBUG' \
	'-DV8_ENABLE_CHECKS'

# Flags passed to all source files.
CFLAGS_Debug := \
	-fPIC \
	-pthread \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-m64 \
	-Wall \
	-std=c++17 \
	-g \
	-O0

# Flags passed to only C files.
CFLAGS_C_Debug :=

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-fno-rtti \
	-std=gnu++1y

INCS_Debug := \
	-I/home/criptext/.cache/node-gyp/10.13.0/include/node \
	-I/home/criptext/.cache/node-gyp/10.13.0/src \
	-I/home/criptext/.cache/node-gyp/10.13.0/deps/openssl/config \
	-I/home/criptext/.cache/node-gyp/10.13.0/deps/openssl/openssl/include \
	-I/home/criptext/.cache/node-gyp/10.13.0/deps/uv/include \
	-I/home/criptext/.cache/node-gyp/10.13.0/deps/zlib \
	-I/home/criptext/.cache/node-gyp/10.13.0/deps/v8/include \
	-I/usr/local/include

DEFS_Release := \
	'-DNODE_GYP_MODULE_NAME=alice' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64'

# Flags passed to all source files.
CFLAGS_Release := \
	-fPIC \
	-pthread \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-m64 \
	-Wall \
	-std=c++17 \
	-O3 \
	-fno-omit-frame-pointer

# Flags passed to only C files.
CFLAGS_C_Release :=

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-fno-rtti \
	-std=gnu++1y

INCS_Release := \
	-I/home/criptext/.cache/node-gyp/10.13.0/include/node \
	-I/home/criptext/.cache/node-gyp/10.13.0/src \
	-I/home/criptext/.cache/node-gyp/10.13.0/deps/openssl/config \
	-I/home/criptext/.cache/node-gyp/10.13.0/deps/openssl/openssl/include \
	-I/home/criptext/.cache/node-gyp/10.13.0/deps/uv/include \
	-I/home/criptext/.cache/node-gyp/10.13.0/deps/zlib \
	-I/home/criptext/.cache/node-gyp/10.13.0/deps/v8/include \
	-I/usr/local/include

OBJS := \
	$(obj).target/$(TARGET)/main.o \
	$(obj).target/$(TARGET)/src/http/http.o \
	$(obj).target/$(TARGET)/src/http/handlers/helpers.o \
	$(obj).target/$(TARGET)/src/http/handlers/cors.o \
	$(obj).target/$(TARGET)/src/http/handlers/encrypt.o \
	$(obj).target/$(TARGET)/src/http/handlers/decrypt.o \
	$(obj).target/$(TARGET)/src/http/handlers/keyBundle.o \
	$(obj).target/$(TARGET)/src/helpers/utf8.o \
	$(obj).target/$(TARGET)/src/crypto/crypto.o \
	$(obj).target/$(TARGET)/src/crypto/signal.o \
	$(obj).target/$(TARGET)/src/crypto/store.o \
	$(obj).target/$(TARGET)/src/crypto/base64.o \
	$(obj).target/$(TARGET)/src/crypto/protocol_store/IdentityKeyStore.o \
	$(obj).target/$(TARGET)/src/crypto/protocol_store/PreKeyStore.o \
	$(obj).target/$(TARGET)/src/crypto/protocol_store/SessionStore.o \
	$(obj).target/$(TARGET)/src/crypto/protocol_store/SignedPreKeyStore.o \
	$(obj).target/$(TARGET)/src/crypto/protocol_store/decode_utils.o \
	$(obj).target/$(TARGET)/../db_interface/src/axolotl/Account.o \
	$(obj).target/$(TARGET)/../db_interface/src/axolotl/IdentityKey.o \
	$(obj).target/$(TARGET)/../db_interface/src/axolotl/PreKey.o \
	$(obj).target/$(TARGET)/../db_interface/src/axolotl/SessionRecord.o \
	$(obj).target/$(TARGET)/../db_interface/src/axolotl/SignedPreKey.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \
	-pthread \
	-rdynamic \
	-m64

LDFLAGS_Release := \
	-pthread \
	-rdynamic \
	-m64

LIBS := \
	-pthread \
	-ldl \
	/usr/lib/x86_64-linux-gnu/libssl.a \
	/usr/lib/x86_64-linux-gnu/libcrypto.a \
	/usr/lib/x86_64-linux-gnu/libsqlite3.a \
	/usr/local/lib/libsignal-protocol-c.a \
	/usr/lib/libcivetweb.so \
	/usr/local/lib/libcjson.a \
	/usr/local/lib/spdlog/libspdlog.a

$(builddir)/alice: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(builddir)/alice: LIBS := $(LIBS)
$(builddir)/alice: LD_INPUTS := $(OBJS)
$(builddir)/alice: TOOLSET := $(TOOLSET)
$(builddir)/alice: $(OBJS) FORCE_DO_CMD
	$(call do_cmd,link)

all_deps += $(builddir)/alice
# Add target alias
.PHONY: alice
alice: $(builddir)/alice

# Add executable to "all" target.
.PHONY: all
all: $(builddir)/alice

